{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"buasIntake\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"terug-knop\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"Terug naar Home\")])),\n    _: 1 /* STABLE */\n  }), _cache[1] || (_cache[1] = _createStaticVNode(\"<br data-v-df3a8538><br data-v-df3a8538><br data-v-df3a8538><h1 data-v-df3a8538>BUas</h1><img class=\\\"logoB\\\" src=\\\"images/C++/Buas.png\\\" alt=\\\"Logo\\\" data-v-df3a8538><div class=\\\"text-block\\\" data-v-df3a8538><h2 data-v-df3a8538>Intake opdracht BUas</h2><p data-v-df3a8538> Voor deze opleiding heb ik al een intake opdracht gemaakt die hieronder te zien is. Deze opdracht ga ik ook fysiek tonen tijdens mijn presentatie. </p></div><br data-v-df3a8538><div class=\\\"text-block\\\" data-v-df3a8538><h2 data-v-df3a8538>Wat zijn abstracte klassen in C++?</h2><p data-v-df3a8538> Een <strong data-v-df3a8538>abstracte klasse</strong> in C++ is een klasse die niet direct gebruikt kan worden om een object van te maken. In plaats daarvan dient een abstracte klasse als basis voor andere klassen. Dit doe je door minstens één functie in de klasse te markeren als een <em data-v-df3a8538>pure virtual functie</em> met <code data-v-df3a8538>= 0</code>. Hierdoor moeten alle afgeleide klassen deze functie implementeren. </p><p data-v-df3a8538> Bijvoorbeeld: </p><pre data-v-df3a8538><code data-v-df3a8538>\\nclass GameObject {\\npublic:\\n    virtual void update() = 0; // Pure virtual functie\\n};\\n      </code></pre><p data-v-df3a8538> Een subklasse die van <code data-v-df3a8538>GameObject</code> erft, moet zelf een <code data-v-df3a8538>update()</code> functie schrijven. Dit zorgt ervoor dat alle objecten van afgeleide klassen een eigen gedrag voor <code data-v-df3a8538>update()</code> hebben. Abstracte klassen zijn belangrijk voor het gebruik van <strong data-v-df3a8538>polymorfisme</strong> in C++. </p></div><h2 data-v-df3a8538>Screenshots intake opdracht</h2><img class=\\\"cpp\\\" src=\\\"images/C++/Button.CPP.png\\\" alt=\\\"Cplusplus\\\" data-v-df3a8538><img class=\\\"cpp\\\" src=\\\"images/C++/Resources.CPP.png\\\" alt=\\\"Cplusplus\\\" data-v-df3a8538><img class=\\\"cpp\\\" src=\\\"images/C++/Game.CPP.png\\\" alt=\\\"Cplusplus\\\" data-v-df3a8538>\", 12))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","_createStaticVNode"],"sources":["C:\\PortfolioWeb\\aa-portfolio\\mijn-portfolio\\src\\views\\buasIn.vue"],"sourcesContent":["<template>\r\n  <div class=\"buasIntake\">\r\n    <router-link to=\"/\" class=\"terug-knop\">Terug naar Home</router-link>\r\n    <br /><br /><br />\r\n    <h1>BUas</h1>\r\n    <img class=\"logoB\" src=\"images/C++/Buas.png\" alt=\"Logo\" />\r\n\r\n    <div class=\"text-block\">\r\n      <h2>Intake opdracht BUas</h2>\r\n      <p>\r\n        Voor deze opleiding heb ik al een intake opdracht gemaakt die hieronder te zien is. \r\n        Deze opdracht ga ik ook fysiek tonen tijdens mijn presentatie.\r\n      </p>\r\n    </div>\r\n    <br />\r\n    \r\n\r\n    <div class=\"text-block\">\r\n      <h2>Wat zijn abstracte klassen in C++?</h2>\r\n      <p>\r\n        Een <strong>abstracte klasse</strong> in C++ is een klasse die niet direct gebruikt kan worden om een object van te maken. \r\n        In plaats daarvan dient een abstracte klasse als basis voor andere klassen. Dit doe je door minstens één functie in de klasse te markeren als een \r\n        <em>pure virtual functie</em> met <code>= 0</code>. Hierdoor moeten alle afgeleide klassen deze functie implementeren.\r\n      </p>\r\n      <p>\r\n        Bijvoorbeeld:\r\n      </p>\r\n      <pre><code>\r\nclass GameObject {\r\npublic:\r\n    virtual void update() = 0; // Pure virtual functie\r\n};\r\n      </code></pre>\r\n      <p>\r\n        Een subklasse die van <code>GameObject</code> erft, moet zelf een <code>update()</code> functie schrijven. \r\n        Dit zorgt ervoor dat alle objecten van afgeleide klassen een eigen gedrag voor <code>update()</code> hebben. \r\n        Abstracte klassen zijn belangrijk voor het gebruik van <strong>polymorfisme</strong> in C++.\r\n      </p>\r\n    </div>\r\n\r\n\r\n    <h2>Screenshots intake opdracht</h2>\r\n    <img class=\"cpp\" src=\"images/C++/Button.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Resources.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Game.CPP.png\" alt=\"Cplusplus\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'buasIntake',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.buasIntake {\r\n  color: white;\r\n  padding: 40px;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  font-family: sans-serif;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  color: #ffcad4;\r\n}\r\n\r\nh2 {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  color: #ffd6e0;\r\n}\r\n\r\na {\r\n  color: #ffd6e0;\r\n  text-decoration: underline;\r\n}\r\n\r\n.text-block {\r\n  margin-top: -50px;\r\n  margin-bottom: 30px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.logoB{\r\n  max-width: 350px;\r\n  height: auto;\r\n  border-radius: 50%;\r\n  margin-left: -20px;\r\n  margin-top: -150px;\r\n}\r\n\r\n.cpp {\r\n  border-radius: 8px;\r\n  width: 900px;\r\n}\r\n\r\n.terug-knop {\r\n  display: inline-block;\r\n  margin-left: -250px;\r\n  padding: 12px 24px;\r\n  background-color: #76273a;\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.terug-knop:hover {\r\n  background: transparent;\r\n  border: 2px solid #bb657a;\r\n}\r\n\r\npre {\r\n  background-color: #333;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  color: #ffd6e0;\r\n  overflow-x: auto;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;;uBAAvBC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJC,YAAA,CAAoEC,sBAAA;IAAvDC,EAAE,EAAC,GAAG;IAACL,KAAK,EAAC;;IAF9BM,OAAA,EAAAC,QAAA,CAE2C,MAAeC,MAAA,QAAAA,MAAA,OAF1DC,gBAAA,CAE2C,iBAAe,E;IAF1DC,CAAA;gCAAAC,kBAAA,04D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}