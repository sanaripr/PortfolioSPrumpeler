{"ast":null,"code":"export default {\n  name: 'buasIntake'\n};","map":{"version":3,"names":["name"],"sources":["C:\\PortfolioWeb\\aa-portfolio\\mijn-portfolio\\src\\views\\buasIn.vue"],"sourcesContent":["<template>\r\n  <div class=\"buasIntake\">\r\n    <router-link to=\"/\" class=\"terug-knop\">Terug naar Home</router-link>\r\n    <br /><br /><br />\r\n    <h1>BUas</h1>\r\n    <img class=\"logoB\" src=\"images/C++/Buas.png\" alt=\"Logo\" />\r\n\r\n    <div class=\"text-block\">\r\n      <h2>Intake opdracht BUas</h2>\r\n      <p>\r\n        Voor deze opleiding heb ik al een intake opdracht gemaakt die hieronder te zien is. \r\n        Deze opdracht ga ik ook fysiek tonen tijdens mijn presentatie.\r\n      </p>\r\n    </div>\r\n    <br />\r\n\r\n\r\n    <div class=\"text-block\">\r\n      <h2>Wat zijn abstracte klassen in C++?</h2>\r\n      <p>\r\n        Een <strong>abstracte klasse</strong> in C++ is een klasse die niet direct gebruikt kan worden om een object van te maken. \r\n        In plaats daarvan dient een abstracte klasse als basis voor andere klassen. Dit doe je door minstens één functie in de klasse te markeren als een \r\n        <em>pure virtual functie</em> met <code>= 0</code>. Hierdoor moeten alle afgeleide klassen deze functie implementeren.\r\n      </p>\r\n      <p>\r\n        Bijvoorbeeld:\r\n      </p>\r\n      <pre><code>\r\n        class GameObject {\r\n        public:\r\n            virtual void update() = 0; // Pure virtual functie\r\n        };\r\n      </code></pre>\r\n      <p>\r\n        Een subklasse die van <code>GameObject</code> erft, moet zelf een <code>update()</code> functie schrijven. \r\n        Dit zorgt ervoor dat alle objecten van afgeleide klassen een eigen gedrag voor <code>update()</code> hebben. \r\n        Abstracte klassen zijn belangrijk voor het gebruik van <strong>polymorfisme</strong> in C++.\r\n      </p>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <p>\r\n        game.cpp:\r\n      </p>\r\n      <pre><code>\r\n#include \"precomp.h\"\r\n#include \"game.h\"\r\n#include \"Player.h\"\r\n#include \"Button.h\"\r\n#include \"Game_Main_Loop.h\"\r\n#include \"resource.h\"\r\n#include \"StartScreen.h\"\r\n\r\nextern GLFWwindow* window;\r\n\r\nvoid Game::Init()\r\n{\r\n  m_Player = new Player;\r\n  m_Button = new Button;\r\n  m_Game_Main_Loop = new Game_Main_Loop;\r\n  m_Resource = new resource;\r\n  m_StartScreen = new StartScreen;\r\n}\r\n\r\n\r\nvoid Game::Tick(float deltaTime)\r\n{\r\n  screen->Clear(0);\r\n  m_Player->set_Player_Pos();\r\n\r\n  screen->Line(220, 0, 220, 720, 0xff00ff);\r\n  screen->Line(0, 115, 1090, 115, 0xff00ff);\r\n  screen->Line(220, 605, 1090, 605, 0xff00ff);\r\n  screen->Line(1090, 0, 1090, 720, 0xff00ff);\r\n\r\n  m_Button->Button_standard(\"Start\", (1280 / 2) - 150, 625, screen);\r\n  m_Button->Button_standard(\"Quit\", (1280 / 2) + 50, 625, screen);\r\n\r\n  // als startscreen true is doe alles hier onder\r\n  if (m_StartScreen->get_StartScreen_Loop() == true)\r\n  {\r\n    //quit\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 50, 625) == true)\r\n    {\r\n      exit(0);\r\n    }\r\n\r\n    //start\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) - 150, 625) == true &&\r\n      m_Player->get_Player_WoodCutting() >= 1 &&\r\n      m_Player->get_Player_Mining() >= 1)\r\n    {\r\n      // startscreen to false\r\n      m_StartScreen->set_StartScreen_Active(false);\r\n      m_Game_Main_Loop->set_Game_Main_Loop_Active(true);\r\n    }\r\n\r\n    //coins + skills\r\n    screen->Print(\"Choose your Skill to start:\", (1280 / 2) + 475, (720 / 2) - 100, 0xFFff00);\r\n    m_Button->Button_standard(\"Wood cutting skill\", (1280 / 2) + 470, (720 / 2) - 85, screen);\r\n    m_Button->Button_standard(\"Mining skill\", (1280 / 2) + 470, (720 / 2) + 10, screen);\r\n\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 470, (720 / 2) - 85))\r\n    {\r\n      m_Player->set_Player_Skills(2, 1);\r\n      screen->Print(\"Cut wood, than set it for coins :)\", (1280 / 2) - 100, 350, 0XFFff00);\r\n    }\r\n\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 470, (720 / 2) + 10))\r\n    {\r\n      m_Player->set_Player_Skills(1, 2);\r\n      screen->Print(\"Mine to get stones, than sell them for coins :)\", (1280 / 2) - 100, 350, 0XFFff00);\r\n    }\r\n    // tot hier\r\n\r\n  }\r\n\r\n\r\n  /// game + skill\r\n  if (m_Game_Main_Loop->get_Game_Main_Loop() == true)\r\n  {\r\n    screen->Clear(0);\r\n\r\n    screen->Line(220, 0, 220, 720, 0xff00ff);\r\n    screen->Line(0, 115, 1090, 115, 0xff00ff);\r\n    screen->Line(220, 605, 1090, 605, 0xff00ff);\r\n    screen->Line(1090, 0, 1090, 720, 0xff00ff);\r\n\r\n    screen->Print(\"Clicky Click\", (1280 / 2) - 8, 60, 0x00ffFF);\r\n\r\n    screen->Print(\"wood\", 70, 30, 0xD1B18A);\r\n    string woodAmount = to_string(m_Resource->get_Wood_Amount());\r\n    screen->Print(woodAmount.c_str(), 105, 30, 0xD1B18A);\r\n\r\n    screen->Print(\"stone\", 70, 50, 0xd3D3D3);\r\n\r\n    string stoneAmount = to_string(m_Resource->get_Stone_Amount());\r\n    screen->Print(stoneAmount.c_str(), 105, 50, 0xd3D3D3);\r\n\r\n    screen->Print(\"Coins\", 70, 80, 0xFFDB58);\r\n    string coinsAmount = to_string(m_Resource->get_Coins_Amount());\r\n    screen->Print(coinsAmount.c_str(), 105, 80, 0xFFDB58);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //screen->Print(\"SKILLS:\", (1280 / 2) + 475, (720 / 2) - 100, 0xFFff00);\r\n    m_Button->Button_standard(\"Forest\", (1280 / 2) + 470, (720 / 2) - 85, screen);\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 470, (720 / 2) - 85) == true)\r\n    {\r\n      m_Game_Main_Loop->set_Forest_Screen_Active(true);\r\n      m_Game_Main_Loop->set_Mine_Screen_Active(false);\r\n      m_Game_Main_Loop->set_Market_Screen_Active(false);\r\n    }\r\n\r\n    m_Button->Button_standard(\"Mine\", (1280 / 2) + 470, (720 / 2) + 10, screen);\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 470, (720 / 2) + 10) == true)\r\n    {\r\n      m_Game_Main_Loop->set_Forest_Screen_Active(false);\r\n      m_Game_Main_Loop->set_Mine_Screen_Active(true);\r\n      m_Game_Main_Loop->set_Market_Screen_Active(false);\r\n\r\n    }\r\n\r\n    m_Button->Button_standard(\"Market\", (1280 / 2) + 470, (720 / 2) + 150, screen);\r\n    if (m_Player->check_Pressed_Standerd((1280 / 2) + 470, (720 / 2) + 150) == true)\r\n    {\r\n      m_Game_Main_Loop->set_Forest_Screen_Active(false);\r\n      m_Game_Main_Loop->set_Mine_Screen_Active(false);\r\n      m_Game_Main_Loop->set_Market_Screen_Active(true);\r\n\r\n    }\r\n\r\n\r\n    //Forest Button Click\r\n    if (m_Game_Main_Loop->get_Forest_Screen() == true)\r\n    {\r\n      m_Button->Button_standard(\"Chop trees\", (1280 / 2) - 400, (720 / 2) - 225, screen);\r\n      if (m_Player->check_Pressed_Standerd((1280 / 2) - 400, (720 / 2) - 225) && glfwGetMouseButton\r\n          (window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_PRESS && !Pressed)\r\n      {\r\n        m_Resource->set_Wood_Amount(m_Resource->get_Wood_Amount() + m_Player->get_Player_WoodCutting());\r\n        Pressed = true;\r\n      }\r\n      if (Pressed == true)\r\n      {\r\n        screen->Box((1280 / 2) - 400, (720 / 2) - 225, (1280 / 2) - 400 + 150, (720 / 2) - 225 + 75, 0x0000FF);\r\n      }\r\n      if (glfwGetMouseButton(window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_RELEASE)\r\n      {\r\n        Pressed = false;\r\n      }\r\n    }\r\n\r\n    //Mine Button Click\r\n    if (m_Game_Main_Loop->get_Mine_Screen() == true)\r\n    {\r\n      m_Button->Button_standard(\"Mine stone\", (1280 / 2) - 400, (720 / 2) - 225, screen);\r\n      if (m_Player->check_Pressed_Standerd((1280 / 2) - 400, (720 / 2) - 225) && glfwGetMouseButton\r\n          (window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_PRESS && !Pressed)\r\n      {\r\n        m_Resource->set_Stone_Amount(m_Resource->get_Stone_Amount() + m_Player->get_Player_Mining());\r\n        Pressed = true;\r\n      }\r\n      if (Pressed == true)\r\n      {\r\n        screen->Box((1280 / 2) - 400, (720 / 2) - 225, (1280 / 2) - 400 + 150, (720 / 2) - 225 + 75, 0x0000FF);\r\n      }\r\n      if (glfwGetMouseButton(window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_RELEASE)\r\n      {\r\n        Pressed = false;\r\n      }\r\n    }\r\n\r\n\r\n    if (m_Game_Main_Loop->get_Market_Screen() == true)\r\n    {\r\n      ////Wood selling\r\n      m_Button->Button_standard(\"Cash Out Wood\", (1280 / 2) - 350, (720 / 2) - 200, screen);\r\n        screen->Print(\"10x Wood = 1 coin\", (1280 / 2) - 325, (720 / 2) - 215, 0xFFDB58);\r\n    \r\n      if (m_Player->check_Pressed_Standerd((1280 / 2) - 350, (720 / 2) - 200) &&\r\n        glfwGetMouseButton(window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_PRESS &&\r\n        !Pressed)\r\n      {\r\n        if (m_Resource->get_Wood_Amount() >= 10)\r\n        {\r\n          m_Resource->set_Wood_Amount(m_Resource->get_Wood_Amount() - 10);\r\n          m_Resource->set_Coins_Amount(m_Resource->get_Coins_Amount() + 1);\r\n          Pressed = false;\r\n        }\r\n      }\r\n\r\n      ////Stone Selling\r\n      m_Button->Button_standard(\"Cash Out Stones\", (1280 / 2) - 150, (720 / 2) - 200, screen);\r\n        screen->Print(\"10x Stone = 1 coin\", (1280 / 2) - 127, (720 / 2) - 215, 0xFFDB58);\r\n\r\n      if (m_Player->check_Pressed_Standerd((1280 / 2) - 150, (720 / 2) - 200) &&\r\n        glfwGetMouseButton(window, GLFW_MOUSE_BUTTON_LEFT) == GLFW_PRESS &&\r\n        !Pressed)\r\n      {\r\n        if (m_Resource->get_Stone_Amount() >= 10)\r\n        {\r\n          m_Resource->set_Stone_Amount(m_Resource->get_Stone_Amount() - 10);\r\n          m_Resource->set_Coins_Amount(m_Resource->get_Coins_Amount() + 1);\r\n          Pressed = true;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n    //m_Button->Button_standard(\"Start\", (1280 / 2) - 150, 500, screen);\r\n    //m_Button->Button_standard(\"Quit\", (1280 / 2) + 50, 500, screen);\r\n  }\r\n\r\n}\r\n      </code></pre>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <h2>Screenshots intake opdracht</h2>\r\n    <img class=\"cpp\" src=\"images/C++/Button.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Resources.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Game.CPP.png\" alt=\"Cplusplus\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'buasIntake',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.buasIntake {\r\n  color: white;\r\n  padding: 40px;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  font-family: sans-serif;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  color: #ffcad4;\r\n}\r\n\r\nh2 {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  color: #ffd6e0;\r\n}\r\n\r\na {\r\n  color: #ffd6e0;\r\n  text-decoration: underline;\r\n}\r\n\r\n.text-block {\r\n  margin-top: -50px;\r\n  margin-bottom: 30px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.logoB{\r\n  max-width: 350px;\r\n  height: auto;\r\n  border-radius: 50%;\r\n  margin-left: -20px;\r\n  margin-top: -150px;\r\n}\r\n\r\n.cpp {\r\n  border-radius: 8px;\r\n  width: 900px;\r\n}\r\n\r\n.terug-knop {\r\n  display: inline-block;\r\n  margin-left: -250px;\r\n  padding: 12px 24px;\r\n  background-color: #76273a;\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.terug-knop:hover {\r\n  background: transparent;\r\n  border: 2px solid #bb657a;\r\n}\r\n\r\npre {\r\n  background-color: #333;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  color: #ffd6e0;\r\n  overflow-x: auto;\r\n}\r\n</style>\r\n"],"mappings":"AAsSA,eAAe;EACbA,IAAI,EAAE;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}