{"ast":null,"code":"export default {\n  name: 'buasIntake'\n};","map":{"version":3,"names":["name"],"sources":["C:\\PortfolioWeb\\aa-portfolio\\mijn-portfolio\\src\\views\\buasIn.vue"],"sourcesContent":["<template>\r\n  <div class=\"buasIntake\">\r\n    <router-link to=\"/\" class=\"terug-knop\">Terug naar Home</router-link>\r\n    <br /><br /><br />\r\n    \r\n    <h1>BUas</h1>\r\n    <img class=\"logoB\" src=\"images/C++/Buas.png\" alt=\"Logo\" />\r\n\r\n    <div class=\"text-block\">\r\n      <h2>Intake opdracht BUas</h2>\r\n      <p>\r\n        Voor de opleiding Creative Media and Game Technologies (CMGT) aan Breda University of Applied Sciences (BUas) \r\n        is het verplicht om een intakeopdracht te maken als onderdeel van het toelatingsproces. \r\n        Deze opdracht is bedoeld om te laten zien wat je motivatie is, welke vaardigheden je al beheerst \r\n        en of je geschikt bent voor de studie.\r\n        Omdat ik erg gemotiveerd ben om deze opleiding te volgen, ben ik ruim van tevoren begonnen met de voorbereiding. \r\n        E√©n van de onderdelen van de intakeopdracht is het maken van een eigen game of technisch project. \r\n        Daarom ben ik aan de slag gegaan met het programmeren van een game in C++.\r\n      </p>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"text-block\">\r\n      <h2>üéÆ Mijn Clicker Game ‚Äì Zelf Gemaakt in C++</h2>\r\n      <p>\r\n        Voor mijn intakeopdracht heb ik een clicker game ontwikkeld in C++, waarin je grondstoffen verzamelt, verkoopt en je productie automatiseert met workers. Het spel bevat strategische keuzes, een eenvoudig economisch systeem en progressie via upgrades.\r\n      </p>\r\n\r\n      <h3>üîç Speluitleg</h3>\r\n      <ol>\r\n        <li>\r\n          <strong>Kies je specialisatie</strong><br />\r\n          Bij het begin van het spel kies je een skill:<br />\r\n          <em>Mine</em> ‚Üí je specialiseert in steen.<br />\r\n          <em>Forrest</em> ‚Üí je specialiseert in hout.<br />\r\n          Deze keuze bepaalt wat je bij het klikken m√©√©r verdient:<br />\r\n          Mine: 2 steen + 1 hout per actie.<br />\r\n          Forrest: 2 hout + 1 steen per actie.\r\n        </li>\r\n        <li>\r\n          <strong>Grondstoffen verzamelen</strong><br />\r\n          Je kunt daarna klikken om hout te hakken of steen te minen.<br />\r\n          Na 4 klikken ontvang je:<br />\r\n          20 van je hoofdmateriaal (afhankelijk van je skill).<br />\r\n          10 van het andere materiaal.<br />\r\n          <em>Voorbeeld:</em> Als je ‚ÄúMine‚Äù hebt gekozen, krijg je na 4 klikken ‚Üí 20 steen en 10 hout.\r\n        </li>\r\n        <li>\r\n          <strong>Grondstoffen verkopen</strong><br />\r\n          De verzamelde hout en steen kun je verkopen voor coins.<br />\r\n          Deze coins gebruik je om je productie verder uit te breiden.\r\n        </li>\r\n        <li>\r\n          <strong>Koop en upgrade workers</strong><br />\r\n          Met je coins kun je workers inhuren die automatisch hout hakken of steen minen:<br />\r\n          Workers werken zelfstandig, zelfs als je niet klikt.<br />\r\n          Je kunt ze upgraden, waardoor ze sneller werken en meer opleveren.\r\n        </li>\r\n      </ol>\r\n\r\n      <h3>üí° Waarom deze game?</h3>\r\n      <p>\r\n        Ik heb gekozen voor een clicker game omdat het me de kans gaf om te oefenen met:\r\n      </p>\r\n      <ul>\r\n        <li>Besluitstructuren (if/else ‚Äì bijvoorbeeld bij het kiezen van je skill)</li>\r\n        <li>Variabelen en loops (bij het verzamelen en automatiseren)</li>\r\n        <li>Objectgeori√´nteerd programmeren (bijvoorbeeld met classes voor workers)</li>\r\n        <li>Balancing en spelontwerp (hoeveel kost iets, hoe snel verdien je iets terug)</li>\r\n      </ul>\r\n      <p>\r\n        De game is simpel, maar bevat een aantal fundamentele principes van game development zoals:\r\n      </p>\r\n      <ul>\r\n        <li>Player progression</li>\r\n        <li>Reward systems</li>\r\n        <li>Resource management</li>\r\n      </ul>\r\n    </div>\r\n    <br />\r\n\r\n    <div class=\"text-block\">\r\n      <h2>Wat zijn abstracte klassen in C++?</h2>\r\n      <p>\r\n        Een <strong>abstracte klasse</strong> in C++ is een klasse die niet direct gebruikt kan worden om een object van te maken. \r\n        In plaats daarvan dient een abstracte klasse als basis voor andere klassen. Dit doe je door minstens √©√©n functie in de klasse te markeren als een \r\n        <em>pure virtual functie</em> met <code>= 0</code>. Hierdoor moeten alle afgeleide klassen deze functie implementeren.\r\n      </p>\r\n      <p>\r\n        Bijvoorbeeld:\r\n      </p>\r\n      <pre><code>\r\nclass GameObject {\r\npublic:\r\n    virtual void update() = 0; // Pure virtual functie\r\n};\r\n      </code></pre>\r\n      <p>\r\n        Een subklasse die van <code>GameObject</code> erft, moet zelf een <code>update()</code> functie schrijven. \r\n        Dit zorgt ervoor dat alle objecten van afgeleide klassen een eigen gedrag voor <code>update()</code> hebben. \r\n        Abstracte klassen zijn belangrijk voor het gebruik van <strong>polymorfisme</strong> in C++.\r\n      </p>\r\n    </div>\r\n    <br />\r\n\r\n    <h2>Screenshots intake opdracht</h2>\r\n    <img class=\"cpp\" src=\"images/C++/Button.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Resources.CPP.png\" alt=\"Cplusplus\" />\r\n    <img class=\"cpp\" src=\"images/C++/Game.CPP.png\" alt=\"Cplusplus\" />\r\n    \r\n    <!-- Je code snippet kan hier blijven zoals je hebt toegevoegd -->\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: 'buasIntake',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.buasIntake {\r\n  color: white;\r\n  padding: 40px;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  font-family: sans-serif;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 20px;\r\n  color: #ffcad4;\r\n}\r\n\r\nh2 {\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n  color: #ffd6e0;\r\n}\r\n\r\na {\r\n  color: #ffd6e0;\r\n  text-decoration: underline;\r\n}\r\n\r\n.text-block {\r\n  margin-top: -50px;\r\n  margin-bottom: 30px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.logoB{\r\n  max-width: 350px;\r\n  height: auto;\r\n  border-radius: 50%;\r\n  margin-left: -20px;\r\n  margin-top: -150px;\r\n}\r\n\r\n.cpp {\r\n  border-radius: 8px;\r\n  width: 900px;\r\n}\r\n\r\n.terug-knop {\r\n  display: inline-block;\r\n  margin-left: -250px;\r\n  padding: 12px 24px;\r\n  background-color: #76273a;\r\n  color: white;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.terug-knop:hover {\r\n  background: transparent;\r\n  border: 2px solid #bb657a;\r\n}\r\n\r\npre {\r\n  background-color: #333;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  color: #ffd6e0;\r\n  overflow-x: auto;\r\n}\r\n</style>\r\n"],"mappings":"AAoHA,eAAe;EACbA,IAAI,EAAE;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}